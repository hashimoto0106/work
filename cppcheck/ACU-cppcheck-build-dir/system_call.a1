<?xml version="1.0"?>
<analyzerinfo checksum="2486178479">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;timeOutSec&apos; can be reduced." verbose="The scope of the variable &apos;timeOutSec&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" hash="14207343085659471960">
            <location file0="..\workspace\OSWRAP\SRC\system_call.c" file="..\workspace\OSWRAP\SRC\system_call.c" line="946" column="12"/>
            <symbol>timeOutSec</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;clkRate&apos; can be reduced." verbose="The scope of the variable &apos;clkRate&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" hash="10182938570066821013">
            <location file0="..\workspace\OSWRAP\SRC\system_call.c" file="..\workspace\OSWRAP\SRC\system_call.c" line="947" column="10"/>
            <symbol>clkRate</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="../workspace/OSWRAP/SRC/system_call.c:32:12" call-funcname="clock_setres" call-argnr="2" file="../workspace/OSWRAP/SRC/system_call.c" line="748" col="8" my-id="../workspace/OSWRAP/PUBLIC/system_call.h:136:5" my-argnr="2"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="c_taskSpawn" lineNumber="51"/>
    <functiondecl functionName="c_taskDelay" lineNumber="103"/>
    <functiondecl functionName="c_taskPrioritySet" lineNumber="141"/>
    <functiondecl functionName="c_taskNameToId" lineNumber="173"/>
    <functiondecl functionName="c_intConnect" lineNumber="206"/>
    <functiondecl functionName="c_msgQCreate" lineNumber="244"/>
    <functiondecl functionName="c_msgQReceive" lineNumber="283"/>
    <functiondecl functionName="c_msgQSend" lineNumber="334"/>
    <functiondecl functionName="c_semMCreate" lineNumber="379"/>
    <functiondecl functionName="c_semTake" lineNumber="414"/>
    <functiondecl functionName="c_semGive" lineNumber="456"/>
    <functiondecl functionName="c_sysClkRateSet" lineNumber="491"/>
    <functiondecl functionName="c_timer_create" lineNumber="530"/>
    <functiondecl functionName="c_timer_settime" lineNumber="572"/>
    <functiondecl functionName="c_clock_gettime" lineNumber="614"/>
    <functiondecl functionName="c_clock_settime" lineNumber="654"/>
    <functiondecl functionName="c_clock_getres" lineNumber="694"/>
    <functiondecl functionName="c_clock_setres" lineNumber="734"/>
    <functiondecl functionName="c_sigvec" lineNumber="774"/>
    <functiondecl functionName="c_0div_enable" lineNumber="813"/>
    <functiondecl functionName="c_rtpSpawn" lineNumber="847"/>
    <functiondecl functionName="c_msgQOpen" lineNumber="889"/>
    <functiondecl functionName="c_sntpcTimeGet" lineNumber="933"/>
    <functiondecl functionName="c_localtime_r" lineNumber="1002"/>
    <functiondecl functionName="c_sysClkRateGet" lineNumber="1033"/>
    <functiondecl functionName="c_msgQNumMsgs" lineNumber="1065"/>
    <functioncall functionName="ERROR"/>
    <functioncall functionName="LM_DEBUG"/>
    <functioncall functionName="LM_INFO"/>
    <functioncall functionName="LM_SEVERE"/>
    <functioncall functionName="LM_TRACE"/>
    <functioncall functionName="LM_WARNING"/>
    <functioncall functionName="MSG_Q_ID"/>
    <functioncall functionName="RTP_ID"/>
    <functioncall functionName="SEM_ID"/>
    <functioncall functionName="WAIT_FOREVER"/>
    <functioncall functionName="arg1"/>
    <functioncall functionName="arg10"/>
    <functioncall functionName="arg2"/>
    <functioncall functionName="arg3"/>
    <functioncall functionName="arg4"/>
    <functioncall functionName="arg5"/>
    <functioncall functionName="arg6"/>
    <functioncall functionName="arg7"/>
    <functioncall functionName="arg8"/>
    <functioncall functionName="arg9"/>
    <functioncall functionName="argv"/>
    <functioncall functionName="buffer"/>
    <functioncall functionName="c_sysClkRateGet"/>
    <functioncall functionName="clock_getres"/>
    <functioncall functionName="clock_gettime"/>
    <functioncall functionName="clock_id"/>
    <functioncall functionName="clock_setres"/>
    <functioncall functionName="clock_settime"/>
    <functioncall functionName="clockid_t"/>
    <functioncall functionName="clogMsg"/>
    <functioncall functionName="context"/>
    <functioncall functionName="double"/>
    <functioncall functionName="entryPt"/>
    <functioncall functionName="envp"/>
    <functioncall functionName="errno"/>
    <functioncall functionName="evp"/>
    <functioncall functionName="flags"/>
    <functioncall functionName="func"/>
    <functioncall functionName="host"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="intConnect"/>
    <functioncall functionName="localtime_r"/>
    <functioncall functionName="maxMsgLength"/>
    <functioncall functionName="maxMsgs"/>
    <functioncall functionName="maxNBytes"/>
    <functioncall functionName="mode"/>
    <functioncall functionName="msgQCreate"/>
    <functioncall functionName="msgQId"/>
    <functioncall functionName="msgQNumMsgs"/>
    <functioncall functionName="msgQOpen"/>
    <functioncall functionName="msgQReceive"/>
    <functioncall functionName="msgQSend"/>
    <functioncall functionName="nBytes"/>
    <functioncall functionName="name"/>
    <functioncall functionName="newPriority"/>
    <functioncall functionName="options"/>
    <functioncall functionName="ovalue"/>
    <functioncall functionName="pOvec"/>
    <functioncall functionName="pVec"/>
    <functioncall functionName="parameter"/>
    <functioncall functionName="priority"/>
    <functioncall functionName="ptimer"/>
    <functioncall functionName="res"/>
    <functioncall functionName="routine"/>
    <functioncall functionName="rtpFileName"/>
    <functioncall functionName="rtpSpawn"/>
    <functioncall functionName="semGive"/>
    <functioncall functionName="semId"/>
    <functioncall functionName="semMCreate"/>
    <functioncall functionName="semTake"/>
    <functioncall functionName="sig"/>
    <functioncall functionName="sigvec"/>
    <functioncall functionName="sntpTime_tmp"/>
    <functioncall functionName="sntpcTimeGet"/>
    <functioncall functionName="stackSize"/>
    <functioncall functionName="sysClkRateGet"/>
    <functioncall functionName="sysClkRateSet"/>
    <functioncall functionName="taskDelay"/>
    <functioncall functionName="taskNameToId"/>
    <functioncall functionName="taskOptions"/>
    <functioncall functionName="taskPrioritySet"/>
    <functioncall functionName="taskSpawn"/>
    <functioncall functionName="ticks"/>
    <functioncall functionName="ticksPerSecond"/>
    <functioncall functionName="tid"/>
    <functioncall functionName="timeBuffer"/>
    <functioncall functionName="timeOutTick"/>
    <functioncall functionName="timeout"/>
    <functioncall functionName="timer"/>
    <functioncall functionName="timer_create"/>
    <functioncall functionName="timer_settime"/>
    <functioncall functionName="timerid"/>
    <functioncall functionName="tp"/>
    <functioncall functionName="uStackSize"/>
    <functioncall functionName="value"/>
    <functioncall functionName="vector"/>
    <functioncall functionName="void"/>
  </FileInfo>
</analyzerinfo>
