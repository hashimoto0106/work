<?xml version="1.0"?>
<analyzerinfo checksum="1268238543">
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="16189075968203046901">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1430" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="1196575484827251334">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1430" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="9668923825022062651">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1430" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="8745813159682744786">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1434" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="5440076393352366561">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1434" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="9746143001982917652">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1434" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="5687266194662996646">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1438" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="12899910260718066325">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1438" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 3) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="9047358075657239304">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1438" column="2"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." verbose="%x in format string (no. 2) requires &apos;unsigned int&apos; but the argument type is &apos;unsigned long&apos;." cwe="686" hash="2132518504269294199">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1487" column="4"/>
        </error>
        <error id="nullPointerArithmeticRedundantCheck" severity="warning" msg="Either the condition &apos;memAddr==(unsigned long*)0&apos; is redundant or there is pointer arithmetic with NULL pointer." verbose="Either the condition &apos;memAddr==(unsigned long*)0&apos; is redundant or there is pointer arithmetic with NULL pointer." cwe="682" hash="9980928170950742306">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1467" column="17" info="Null pointer addition"/>
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1469" column="13" info="condition &apos;memAddr==(unsigned long*)0&apos;"/>
        </error>
        <error id="nullPointerArithmeticRedundantCheck" severity="warning" msg="Either the condition &apos;memAddr==(unsigned long*)0&apos; is redundant or there is pointer arithmetic with NULL pointer." verbose="Either the condition &apos;memAddr==(unsigned long*)0&apos; is redundant or there is pointer arithmetic with NULL pointer." cwe="682" hash="7460736512759246821">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1519" column="17" info="Null pointer addition"/>
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="1520" column="13" info="condition &apos;memAddr==(unsigned long*)0&apos;"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;ret&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;ret&apos; is reassigned a value before the old one has been used." cwe="563" hash="17305336153106840488">
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="156" column="6" info="ret is overwritten"/>
            <location file0="..\workspace\DRIVER\SRC\pci_sdc.c" file="..\workspace\DRIVER\SRC\pci_sdc.c" line="112" column="8" info="ret is assigned"/>
            <symbol>ret</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="../workspace/DRIVER/PUBLIC/pci_drv_sdc.h:105:5" call-funcname="FsdcGetDipSwitch" call-argnr="2" file="../workspace/DRIVER/SRC/pci_sdc.c" line="180" col="18" call-argexpr="&dipsw" call-argvaluetype="7" call-argvalue="4"/><function-call call-id="../workspace/DRIVER/PUBLIC/pci_drv_sdc.h:159:16" call-funcname="FsdcGetAddress" call-argnr="3" file="../workspace/DRIVER/SRC/pci_sdc.c" line="1466" col="26" call-argexpr="&blockSize" call-argvaluetype="7" call-argvalue="4"/><function-call call-id="../workspace/DRIVER/PUBLIC/pci_drv_sdc.h:159:16" call-funcname="FsdcGetAddress" call-argnr="3" file="../workspace/DRIVER/SRC/pci_sdc.c" line="1466" col="26" call-argexpr="blockSize" call-argvaluetype="4" call-argvalue="0"/><function-call call-id="../workspace/DRIVER/PUBLIC/pci_drv_sdc.h:159:16" call-funcname="FsdcGetAddress" call-argnr="3" file="../workspace/DRIVER/SRC/pci_sdc.c" line="1518" col="26" call-argexpr="&blockSize" call-argvaluetype="7" call-argvalue="4"/><function-call call-id="../workspace/DRIVER/PUBLIC/pci_drv_sdc.h:159:16" call-funcname="FsdcGetAddress" call-argnr="3" file="../workspace/DRIVER/SRC/pci_sdc.c" line="1518" col="26" call-argexpr="blockSize" call-argvaluetype="4" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="../workspace/DRIVER/PUBLIC/pci_drv_sdc.h:159:16" my-argnr="3" my-argname="blockSize" file="../workspace/DRIVER/SRC/pci_sdc.c" line="1283" col="3" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="FsdcInit" lineNumber="60"/>
    <functiondecl functionName="FsdcOpen" lineNumber="85"/>
    <functiondecl functionName="FsdcClose" lineNumber="199"/>
    <functiondecl functionName="FsdcSetCycle" lineNumber="226"/>
    <functiondecl functionName="FsdcSetMultiConfig" lineNumber="268"/>
    <functiondecl functionName="FsdcSetSoloConfig" lineNumber="410"/>
    <functiondecl functionName="FsdcGetAngle" lineNumber="575"/>
    <functiondecl functionName="FsdcGetDipSwitch" lineNumber="762"/>
    <functiondecl functionName="FsdcGetBitError" lineNumber="798"/>
    <functiondecl functionName="FsdcGetSlipError" lineNumber="880"/>
    <functiondecl functionName="FsdcGetRefFail" lineNumber="983"/>
    <functiondecl functionName="FsdcGetM5vFail" lineNumber="1023"/>
    <functiondecl functionName="FsdcGetSeu" lineNumber="1063"/>
    <functiondecl functionName="FsdcGetRearIdFault" lineNumber="1103"/>
    <functiondecl functionName="FsdcGetClockError" lineNumber="1143"/>
    <functiondecl functionName="FsdcHeartBeat" lineNumber="1183"/>
    <functiondecl functionName="FsdcGetAngleInputFail" lineNumber="1238"/>
    <functiondecl functionName="FsdcGetAddress" lineNumber="1278"/>
    <functiondecl functionName="FsdcGetHwVersion" lineNumber="1316"/>
    <functiondecl functionName="FsdcSetLED" lineNumber="1354"/>
    <functiondecl functionName="FsdcSlipIgnore" lineNumber="1391"/>
    <functiondecl functionName="FsdcPrintSd" lineNumber="1408"/>
    <functiondecl functionName="FsdcRegRead" lineNumber="1459"/>
    <functiondecl functionName="FsdcRegWrite" lineNumber="1510"/>
    <functiondecl functionName="FsdcSetResl" lineNumber="1558"/>
    <functiondecl functionName="pci_sdcSlipLimit" lineNumber="1651"/>
    <functiondecl functionName="pci_sdcDeviceSearch" lineNumber="1682"/>
    <functiondecl functionName="pci_sdcDeviceRegist" lineNumber="1706"/>
    <functiondecl functionName="pci_sdcDeviceDelete" lineNumber="1738"/>
    <functiondecl functionName="pci_sdcCardInit" lineNumber="1769"/>
    <functiondecl functionName="pci_sdcCountAngleFail" lineNumber="1818"/>
    <functioncall functionName="FsdcGetAddress"/>
    <functioncall functionName="FsdcGetDipSwitch"/>
    <functioncall functionName="Resl"/>
    <functioncall functionName="addr"/>
    <functioncall functionName="baseAddr0"/>
    <functioncall functionName="bit_alarm"/>
    <functioncall functionName="blockSize"/>
    <functioncall functionName="break"/>
    <functioncall functionName="busNo"/>
    <functioncall functionName="c_offset"/>
    <functioncall functionName="com_stat"/>
    <functioncall functionName="courseOffset"/>
    <functioncall functionName="courseRatio"/>
    <functioncall functionName="cycle"/>
    <functioncall functionName="data"/>
    <functioncall functionName="default"/>
    <functioncall functionName="devNo"/>
    <functioncall functionName="deviceID"/>
    <functioncall functionName="digitalData"/>
    <functioncall functionName="dip_sw"/>
    <functioncall functionName="dipsw"/>
    <functioncall functionName="double"/>
    <functioncall functionName="f_offset"/>
    <functioncall functionName="fineOffset"/>
    <functioncall functionName="fineRatio"/>
    <functioncall functionName="for"/>
    <functioncall functionName="funcNo"/>
    <functioncall functionName="heart_beat"/>
    <functioncall functionName="hwVersion"/>
    <functioncall functionName="hw_version"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="index"/>
    <functioncall functionName="int"/>
    <functioncall functionName="intLine"/>
    <functioncall functionName="long"/>
    <functioncall functionName="m_offset"/>
    <functioncall functionName="memAddr0"/>
    <functioncall functionName="mix"/>
    <functioncall functionName="mixOffset"/>
    <functioncall functionName="mix_speed"/>
    <functioncall functionName="nBitErr"/>
    <functioncall functionName="nBitSlip"/>
    <functioncall functionName="nBlock"/>
    <functioncall functionName="nBoard"/>
    <functioncall functionName="nBoardDef"/>
    <functioncall functionName="nCounter"/>
    <functioncall functionName="nFreq"/>
    <functioncall functionName="nMemBlkAddr0"/>
    <functioncall functionName="nNo"/>
    <functioncall functionName="nNum"/>
    <functioncall functionName="nSDdigitalData"/>
    <functioncall functionName="nSdcNum"/>
    <functioncall functionName="nSlipErr"/>
    <functioncall functionName="nSlipLimit"/>
    <functioncall functionName="offset"/>
    <functioncall functionName="onoff"/>
    <functioncall functionName="pciConfigInLong"/>
    <functioncall functionName="pciConfigOutLong"/>
    <functioncall functionName="pciFindDevice"/>
    <functioncall functionName="pci_comEndianLong"/>
    <functioncall functionName="pci_comEndianShort"/>
    <functioncall functionName="pci_comGetIoBlockAddr"/>
    <functioncall functionName="pci_comGetMemBlockAddr"/>
    <functioncall functionName="pci_comPCIendianChg"/>
    <functioncall functionName="pci_sdcCardInit"/>
    <functioncall functionName="pci_sdcCountAngleFail"/>
    <functioncall functionName="pci_sdcDeviceDelete"/>
    <functioncall functionName="pci_sdcDeviceRegist"/>
    <functioncall functionName="pci_sdcDeviceSearch"/>
    <functioncall functionName="pci_sdcSlipLimit"/>
    <functioncall functionName="post_alarm"/>
    <functioncall functionName="prevAngle"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="ratio"/>
    <functioncall functionName="ret"/>
    <functioncall functionName="return"/>
    <functioncall functionName="reverse"/>
    <functioncall functionName="sdMixSpeed"/>
    <functioncall functionName="sd_cont"/>
    <functioncall functionName="sd_stat"/>
    <functioncall functionName="slipSpeed"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="venderID"/>
    <functioncall functionName="void"/>
  </FileInfo>
</analyzerinfo>
