<?xml version="1.0"?>
<analyzerinfo checksum="2610315287">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" hash="3482712051452941653">
            <location file0="Z:\ACU\ACU_SXA\workspace\J2STD\SRC\P_CONT\interpolation.c" file="Z:\ACU\ACU_SXA\workspace\J2STD\SRC\P_CONT\interpolation.c" line="86" column="6"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;cond_interpolation_xy&apos; can be reduced." verbose="The scope of the variable &apos;cond_interpolation_xy&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" hash="15429867959656659178">
            <location file0="Z:\ACU\ACU_SXA\workspace\J2STD\SRC\P_CONT\interpolation.c" file="Z:\ACU\ACU_SXA\workspace\J2STD\SRC\P_CONT\interpolation.c" line="87" column="6"/>
            <symbol>cond_interpolation_xy</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" hash="10415305239642200017">
            <location file0="Z:\ACU\ACU_SXA\workspace\J2STD\SRC\P_CONT\interpolation.c" file="Z:\ACU\ACU_SXA\workspace\J2STD\SRC\P_CONT\interpolation.c" line="151" column="6"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" hash="10789756820064063729">
            <location file0="Z:\ACU\ACU_SXA\workspace\J2STD\SRC\P_CONT\interpolation.c" file="Z:\ACU\ACU_SXA\workspace\J2STD\SRC\P_CONT\interpolation.c" line="216" column="6"/>
            <symbol>i</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:266:8" call-funcname="s_getRemoteProgAzPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="97" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:271:8" call-funcname="s_getRemoteProgElPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="99" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:266:8" call-funcname="s_getRemoteProgAzPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="97" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:271:8" call-funcname="s_getRemoteProgElPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="99" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:266:8" call-funcname="s_getRemoteProgAzPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="97" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:271:8" call-funcname="s_getRemoteProgElPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="99" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:266:8" call-funcname="s_getRemoteProgAzPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="97" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:271:8" call-funcname="s_getRemoteProgElPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="99" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:266:8" call-funcname="s_getRemoteProgAzPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="97" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:271:8" call-funcname="s_getRemoteProgElPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="99" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="ctu">
<function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:266:8" call-funcname="s_getRemoteProgAzPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="97" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="Z:/ACU/ACU_SXA/workspace/J2STD/PUBLIC/remoteif.h:271:8" call-funcname="s_getRemoteProgElPredCommand" call-argnr="1" file="Z:/ACU/ACU_SXA/workspace/J2STD/SRC/P_CONT/interpolation.c" line="99" col="72" call-argexpr="0" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="m_prog_interpolation" lineNumber="84"/>
    <functiondecl functionName="s_interpolation_azel" lineNumber="149"/>
    <functiondecl functionName="s_pdaxchg" lineNumber="183"/>
    <functiondecl functionName="s_interpolation_xy" lineNumber="214"/>
    <functiondecl functionName="s_pdxachg" lineNumber="246"/>
    <functiondecl functionName="s_make_cond_interpolation_xy" lineNumber="293"/>
    <functiondecl functionName="m_prog_interpolation" lineNumber="84"/>
    <functiondecl functionName="s_interpolation_azel" lineNumber="149"/>
    <functiondecl functionName="s_pdaxchg" lineNumber="183"/>
    <functiondecl functionName="s_interpolation_xy" lineNumber="214"/>
    <functiondecl functionName="s_pdxachg" lineNumber="246"/>
    <functiondecl functionName="s_make_cond_interpolation_xy" lineNumber="293"/>
    <functiondecl functionName="m_prog_interpolation" lineNumber="84"/>
    <functiondecl functionName="s_interpolation_azel" lineNumber="149"/>
    <functiondecl functionName="s_pdaxchg" lineNumber="183"/>
    <functiondecl functionName="s_interpolation_xy" lineNumber="214"/>
    <functiondecl functionName="s_pdxachg" lineNumber="246"/>
    <functiondecl functionName="s_make_cond_interpolation_xy" lineNumber="293"/>
    <functiondecl functionName="m_prog_interpolation" lineNumber="84"/>
    <functiondecl functionName="s_interpolation_azel" lineNumber="149"/>
    <functiondecl functionName="s_pdaxchg" lineNumber="183"/>
    <functiondecl functionName="s_interpolation_xy" lineNumber="214"/>
    <functiondecl functionName="s_pdxachg" lineNumber="246"/>
    <functiondecl functionName="s_make_cond_interpolation_xy" lineNumber="293"/>
    <functiondecl functionName="m_prog_interpolation" lineNumber="84"/>
    <functiondecl functionName="s_interpolation_azel" lineNumber="149"/>
    <functiondecl functionName="s_pdaxchg" lineNumber="183"/>
    <functiondecl functionName="s_interpolation_xy" lineNumber="214"/>
    <functiondecl functionName="s_pdxachg" lineNumber="246"/>
    <functiondecl functionName="s_make_cond_interpolation_xy" lineNumber="293"/>
    <functiondecl functionName="m_prog_interpolation" lineNumber="84"/>
    <functiondecl functionName="s_interpolation_azel" lineNumber="149"/>
    <functiondecl functionName="s_pdaxchg" lineNumber="183"/>
    <functiondecl functionName="s_interpolation_xy" lineNumber="214"/>
    <functiondecl functionName="s_pdxachg" lineNumber="246"/>
    <functiondecl functionName="s_make_cond_interpolation_xy" lineNumber="293"/>
    <functioncall functionName="AX2_NUM"/>
    <functioncall functionName="AX3_NUM"/>
    <functioncall functionName="AXIS_AX2"/>
    <functioncall functionName="AXIS_AX3"/>
    <functioncall functionName="AXIS_CR"/>
    <functioncall functionName="AXIS_EL"/>
    <functioncall functionName="AXIS_NUM"/>
    <functioncall functionName="AZpredRangeOfAZELtrans"/>
    <functioncall functionName="DSP2_NUM"/>
    <functioncall functionName="DSP_NUM"/>
    <functioncall functionName="ELpredRangeOfAZELtrans"/>
    <functioncall functionName="angle"/>
    <functioncall functionName="c_azel_x"/>
    <functioncall functionName="c_azel_y"/>
    <functioncall functionName="c_xy_az"/>
    <functioncall functionName="c_xy_el"/>
    <functioncall functionName="double"/>
    <functioncall functionName="doubleArrayNull"/>
    <functioncall functionName="fabs"/>
    <functioncall functionName="for"/>
    <functioncall functionName="getVariability"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="int"/>
    <functioncall functionName="loop_period"/>
    <functioncall functionName="s_getRemoteProgAzPredCommand"/>
    <functioncall functionName="s_getRemoteProgElPredCommand"/>
    <functioncall functionName="s_interpolation_azel"/>
    <functioncall functionName="s_interpolation_xy"/>
    <functioncall functionName="s_make_cond_interpolation_xy"/>
    <functioncall functionName="s_pdaxchg"/>
    <functioncall functionName="s_pdxachg"/>
    <functioncall functionName="void"/>
  </FileInfo>
</analyzerinfo>
