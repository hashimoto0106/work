##=================================================================
## HTTPDログ解析
## エラーアクセスの行を削除
## remove_error_access.awk
##-----------------------------------------------------------------
## ステータスコード別にファイルへリダイレクト
## 標準出力へは、ステータスコード別の集計結果をCSV形式で出力
##=================================================================
BEGIN {
    FPAT="([^ ]+)|(\"[^\"]+\")|(\[[^\[]+[^\]]+\])"
    # 出力ファイルの指定
    information = "information.tmp"   # 情報
    redirection = "redirection.tmp"   # リダイレクト
    client_error = "client_error.tmp" # クライアントエラー
    server_error = "server_error.tmp" # サーバーエラー
    success = "success.tmp"           # 成功
    total = 0                         # エラーの総計
}
{
    count($6, num)
}
# 情報コードの処理
$6 ~ /1[0-9]+/ {
    print $0 > information
}

# リダイレクションコードの処理
$6 ~ /3[0-9]+/ {
    print $0 > redirection
}

# クライアントエラーコードの処理
$6 ~ /4[0-9]+/ {
    print $0 > client_error
}

# サーバーエラーコードの処理
$6 ~ /5[0-9]+/ {
    print $0 > server_error
}

# 成功コードの処理
$6 ~ /2[0-9]+/ {
    print $0 > success
}

END {
    for ( i in num ) {
        OFS=","
        print i "," num[i]
    }
    print "total," total
}

##=================================================================
## 関数定義
##=================================================================

##-----------------------------------------------------------------
## HTTPステータスコードのカウント
##-----------------------------------------------------------------

function count(code, array) {
    array[code]+=1
    total+=1
}
