##====================================================================
##  遷移行列によるマルコフ連鎖
##  markov.awk
##====================================================================


##====================================================================
##  事前処理
##====================================================================

BEGIN  {
    num = ARGV[1]       # マルコフ過程の長さ
    delete ARGV[1]
    st = ARGV[2]        # 初期状態の番号
    delete ARGV[2]
    srand()
    t = 1
}


##====================================================================
##  本体処理
##====================================================================

NR == 1  {    # 状態名の格納
    deg = split($0, item)
}


NR >=3  {    # 遷移確率の格納
    tab[t][1] = ""    # 二次元配列としての領域の確保
    split($0, tab[t++])
}


##====================================================================
##  事後処理
##====================================================================

END  {
    for ( k = 0; k < num; k++ ) {
        printf item[st] " "
        st = trans_state(tab[st], deg)
    }
    print ""
}


##====================================================================
##  関数定義
##====================================================================

function trans_state(arr, deg,    k) {
    r = rand()
    v = 0
    for ( k = 1; k <= deg; k++ ) {
        v += arr[k]
        if ( r < v ) { return k; }
    }
    return k;
}
