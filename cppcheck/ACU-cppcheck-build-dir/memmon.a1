<?xml version="1.0"?>
<analyzerinfo checksum="4270048832">
        <error id="getsCalled" severity="warning" msg="Obsolete function &apos;gets&apos; called. It is recommended to use &apos;fgets&apos; or &apos;gets_s&apos; instead." verbose="The obsolete function &apos;gets&apos; is called. With &apos;gets&apos; you&apos;ll get a buffer overrun if the input data exceeds the size of the buffer. It is recommended to use the functions &apos;fgets&apos; or &apos;gets_s&apos; instead." cwe="477" hash="8790722864413285841">
            <location file0="..\workspace\OSWRAP\SRC\memmon.c" file="..\workspace\OSWRAP\SRC\memmon.c" line="770" column="10"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;ret&apos; can be reduced." verbose="The scope of the variable &apos;ret&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" hash="10972122673982565342">
            <location file0="..\workspace\OSWRAP\SRC\memmon.c" file="..\workspace\OSWRAP\SRC\memmon.c" line="635" column="7"/>
            <symbol>ret</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;retc&apos; can be reduced." verbose="The scope of the variable &apos;retc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" hash="973020236375717087">
            <location file0="..\workspace\OSWRAP\SRC\memmon.c" file="..\workspace\OSWRAP\SRC\memmon.c" line="722" column="9"/>
            <symbol>retc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;temp&apos; can be reduced." verbose="The scope of the variable &apos;temp&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" hash="10993774050339576707">
            <location file0="..\workspace\OSWRAP\SRC\memmon.c" file="..\workspace\OSWRAP\SRC\memmon.c" line="952" column="16"/>
            <symbol>temp</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="248" col="9" call-argexpr="MM_CPU" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="4" file="../workspace/OSWRAP/SRC/memmon.c" line="248" col="9" call-argexpr="format" call-argvaluetype="0" call-argvalue="0">
  <path file="..\workspace\OSWRAP\SRC\memmon.c" line="235" col="12" info="Assignment 'format=MM_1i', assigned value is 0"/>
</function-call><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="5" file="../workspace/OSWRAP/SRC/memmon.c" line="248" col="9" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="285" col="9" call-argexpr="MM_CPU" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="5" file="../workspace/OSWRAP/SRC/memmon.c" line="285" col="9" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="319" col="9" call-argexpr="MM_CPU" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="4" file="../workspace/OSWRAP/SRC/memmon.c" line="319" col="9" call-argexpr="format" call-argvaluetype="0" call-argvalue="0">
  <path file="..\workspace\OSWRAP\SRC\memmon.c" line="306" col="12" info="Assignment 'format=MM_1i', assigned value is 0"/>
</function-call><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="356" col="9" call-argexpr="MM_CPU" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="5" file="../workspace/OSWRAP/SRC/memmon.c" line="376" col="9" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="5" file="../workspace/OSWRAP/SRC/memmon.c" line="411" col="9" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="445" col="11" call-argexpr="MM_CPU" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="3" file="../workspace/OSWRAP/SRC/memmon.c" line="445" col="11" call-argexpr="format" call-argvaluetype="0" call-argvalue="0">
  <path file="..\workspace\OSWRAP\SRC\memmon.c" line="431" col="12" info="Assignment 'format=MM_1i', assigned value is 0"/>
</function-call><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="4" file="../workspace/OSWRAP/SRC/memmon.c" line="445" col="11" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="482" col="11" call-argexpr="MM_CPU" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="4" file="../workspace/OSWRAP/SRC/memmon.c" line="482" col="11" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="516" col="11" call-argexpr="MM_CPU" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="3" file="../workspace/OSWRAP/SRC/memmon.c" line="516" col="11" call-argexpr="format" call-argvaluetype="0" call-argvalue="0">
  <path file="..\workspace\OSWRAP\SRC\memmon.c" line="502" col="12" info="Assignment 'format=MM_1i', assigned value is 0"/>
</function-call><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="553" col="11" call-argexpr="MM_CPU" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="4" file="../workspace/OSWRAP/SRC/memmon.c" line="574" col="11" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="4" file="../workspace/OSWRAP/SRC/memmon.c" line="609" col="11" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:168:5" call-funcname="getWidth" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="640" col="18" call-argexpr="format" call-argvaluetype="0" call-argvalue="0">
  <path file="..\workspace\OSWRAP\SRC\memmon.c" line="235" col="12" info="Assignment 'format=MM_1i', assigned value is 0"/>
  <path file="..\workspace\OSWRAP\SRC\memmon.c" line="248" col="35" info="Calling function 'memDump', 4th argument 'format' value is 0"/>
</function-call><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:168:5" call-funcname="getWidth" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="729" col="18" call-argexpr="format" call-argvaluetype="0" call-argvalue="0">
  <path file="..\workspace\OSWRAP\SRC\memmon.c" line="431" col="12" info="Assignment 'format=MM_1i', assigned value is 0"/>
  <path file="..\workspace\OSWRAP\SRC\memmon.c" line="445" col="29" info="Calling function 'memModify', 3rd argument 'format' value is 0"/>
</function-call><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:178:6" call-funcname="sscanValue" call-argnr="1" file="../workspace/OSWRAP/SRC/memmon.c" line="784" col="14" call-argexpr="input" call-argvaluetype="7" call-argvalue="64"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="5" file="../workspace/OSWRAP/SRC/memmon.c" line="1103" col="9" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="5" file="../workspace/OSWRAP/SRC/memmon.c" line="1138" col="9" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="4" file="../workspace/OSWRAP/SRC/memmon.c" line="1157" col="11" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="4" file="../workspace/OSWRAP/SRC/memmon.c" line="1191" col="11" call-argexpr="MM_NOSWAP" call-argvaluetype="0" call-argvalue="0"/><function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="248" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:89:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="285" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:95:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="319" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:101:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="356" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:107:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="376" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:113:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="411" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:118:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="445" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:124:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="482" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:129:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="516" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:134:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:161:5" call-funcname="memModify" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="553" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:139:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="1103" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:198:5" my-argnr="1"/>
<function-call call-id="../workspace/OSWRAP/SRC/memmon.c:153:5" call-funcname="memDump" call-argnr="2" file="../workspace/OSWRAP/SRC/memmon.c" line="1138" col="2" my-id="../workspace/OSWRAP/SRC/memmon.c:203:5" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="dd" lineNumber="225"/>
    <functiondecl functionName="df" lineNumber="259"/>
    <functiondecl functionName="swapd" lineNumber="296"/>
    <functiondecl functionName="swapdf" lineNumber="330"/>
    <functiondecl functionName="dspd" lineNumber="367"/>
    <functiondecl functionName="dspdf" lineNumber="387"/>
    <functiondecl functionName="mm" lineNumber="422"/>
    <functiondecl functionName="mf" lineNumber="456"/>
    <functiondecl functionName="swapm" lineNumber="493"/>
    <functiondecl functionName="swapmf" lineNumber="527"/>
    <functiondecl functionName="dspm" lineNumber="564"/>
    <functiondecl functionName="dspmf" lineNumber="585"/>
    <functiondecl functionName="memDump" lineNumber="620"/>
    <functiondecl functionName="memModify" lineNumber="711"/>
    <functiondecl functionName="getWidth" lineNumber="825"/>
    <functiondecl functionName="printValue" lineNumber="860"/>
    <functiondecl functionName="sscanValue" lineNumber="903"/>
    <functiondecl functionName="swapData" lineNumber="947"/>
    <functiondecl functionName="setDspMemmonRequest" lineNumber="969"/>
    <functiondecl functionName="getDspMemmonRequest" lineNumber="1036"/>
    <functiondecl functionName="setDspMemmonAnswer" lineNumber="1067"/>
    <functiondecl functionName="dsp2d" lineNumber="1094"/>
    <functiondecl functionName="dsp2df" lineNumber="1114"/>
    <functiondecl functionName="dsp2m" lineNumber="1147"/>
    <functiondecl functionName="dsp2mf" lineNumber="1167"/>
    <functioncall functionName="FALSE"/>
    <functioncall functionName="MM_1i"/>
    <functioncall functionName="MM_2i"/>
    <functioncall functionName="MM_4e"/>
    <functioncall functionName="MM_4f"/>
    <functioncall functionName="MM_4i"/>
    <functioncall functionName="MM_8e"/>
    <functioncall functionName="MM_8f"/>
    <functioncall functionName="MM_CPU"/>
    <functioncall functionName="MM_DSP1"/>
    <functioncall functionName="MM_DSP2"/>
    <functioncall functionName="MM_ERROR"/>
    <functioncall functionName="MM_NONE"/>
    <functioncall functionName="MM_NOSWAP"/>
    <functioncall functionName="MM_READ"/>
    <functioncall functionName="MM_SWAP"/>
    <functioncall functionName="MM_WRITE"/>
    <functioncall functionName="TRUE"/>
    <functioncall functionName="action"/>
    <functioncall functionName="address"/>
    <functioncall functionName="b"/>
    <functioncall functionName="brank"/>
    <functioncall functionName="break"/>
    <functioncall functionName="breaker"/>
    <functioncall functionName="card_no"/>
    <functioncall functionName="d"/>
    <functioncall functionName="data"/>
    <functioncall functionName="dataAddr"/>
    <functioncall functionName="default"/>
    <functioncall functionName="dspp"/>
    <functioncall functionName="f"/>
    <functioncall functionName="for"/>
    <functioncall functionName="format"/>
    <functioncall functionName="getWidth"/>
    <functioncall functionName="gets"/>
    <functioncall functionName="hostp"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="input"/>
    <functioncall functionName="l"/>
    <functioncall functionName="long"/>
    <functioncall functionName="memDump"/>
    <functioncall functionName="memModify"/>
    <functioncall functionName="memmonBuff"/>
    <functioncall functionName="mm_action"/>
    <functioncall functionName="mm_card_no"/>
    <functioncall functionName="mm_dspp"/>
    <functioncall functionName="mm_hostp"/>
    <functioncall functionName="mm_size"/>
    <functioncall functionName="nanosleep"/>
    <functioncall functionName="note"/>
    <functioncall functionName="nunits"/>
    <functioncall functionName="print"/>
    <functioncall functionName="printValue"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="return"/>
    <functioncall functionName="setDspMemmonRequest"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sscanValue"/>
    <functioncall functionName="sscanf"/>
    <functioncall functionName="strcmp"/>
    <functioncall functionName="swap"/>
    <functioncall functionName="swapData"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="t"/>
    <functioncall functionName="temp"/>
    <functioncall functionName="v"/>
    <functioncall functionName="value"/>
    <functioncall functionName="w"/>
    <functioncall functionName="while"/>
    <functioncall functionName="width"/>
  </FileInfo>
</analyzerinfo>
